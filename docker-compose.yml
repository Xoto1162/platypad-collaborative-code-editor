version: '3'

services:

  ##
  ## Convergence Server
  ##
  convergence:
    image: convergencelabs/convergence-omnibus:1.0.0-rc.6
    ports:
      - "8000:80"

  ##
  ## PeerJS server
  ##
  peerjs:
    image: peerjs/peerjs-server:0.5.3
    ports:
      - "9000:9000"
    command: [ "--port", "9000", "--path", "/myapp", "--proxied", "true" ]

  ##
  ## Judge0 server
  ##
  server:
    image: judge0/api:1.8.0
    volumes:
      - ./config/judge0/judge0-api.conf:/judge0-api.conf:ro
    ports:
      - "3000:3000"
    privileged: true

  ##
  ## Postgres database
  ##
  db:
    image: postgres:9.6
    env_file: config/judge0/judge0-api.conf
    volumes:
      - ./srv/postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  ##
  ## Redis
  ##
  redis:
    image: redis:4.0
    command: [
      "bash", "-c",
      'docker-entrypoint.sh --appendonly yes --requirepass "$$REDIS_PASSWORD"'
    ]
    env_file: config/judge0/judge0-api.conf
    volumes:
      - ./srv/redis-data:/data
    ports:
      - "6379:6379"

  ##
  ## Judge0 worker
  ##
  workers:
    image: judge0/api:1.8.0
    command: ["./scripts/workers"]
    volumes:
      - ./config/judge0/judge0-api.conf:/judge0-api.conf:ro
    privileged: true

  ##
  ## The proxy simply creates a single HTTP/HTTP Ingress and forwards traffic
  ## to the appropriate container.
  ##
  proxy:
    image: nginx:1.17.6-alpine
    # restart: always
    volumes:
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./dist:/usr/share/nginx/html
      - ./config/nginx/ssl:/etc/nginx/ssl/
    depends_on:
      - peerjs
      #- server
      #- db
      #- redis
      #- workers
    ports:
      - "443:443"
      - "80:80"
